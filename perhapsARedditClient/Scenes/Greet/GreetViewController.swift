//
//  GreetViewController.swift
//  perhapsARedditClient
//
//  Created by a on 03.09.22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol GreetDisplayLogic: AnyObject {
    func presentAlert(viewModel: Greet.unsupportedAlert.ViewModel)
}

class GreetViewController: UIViewController, configable {
    
    // MARK: - Clean Components
    
    var router: GreetRoutingLogic?
    private var interactor: GreetBusinessLogic?
    
    // MARK: - Views

    @IBOutlet var logo: UIImageView!
    private let alert = UIAlertController(title: "Warning", message: "Feature unsupported!", preferredStyle: .alert)

    // MARK: - Fields
    
    let userAgreementsUrlString = "https://www.redditinc.com/policies/user-agreement"
    let privacyPolicyUrlString = "https://www.reddit.com/policies/privacy-policy"
    
    // MARK: - config
    
    func config() {
        let apiManager = APIManager()
        let worker = GreetWorker(apiManager: apiManager)
        let presenter = GreetPresenter()
        let interactor = GreetInteractor(worker: worker, presenter: presenter)
        let router = GreetRouter()
        self.router = router
        self.interactor = interactor
        presenter.viewController = self
        router.viewController = self
    }
    
    // MARK: - View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        setupView()
    }
    //MARK: - View setup
    
    func setupView() {
        let okAction = UIAlertAction(title: "OK", style: UIAlertAction.Style.default) {
                UIAlertAction in
                NSLog("OK Pressed")
            }
        alert.addAction(okAction)
    }
    
    //MARK: - IBActions
    
    @IBAction func GoogleSignIn(_ sender: Any) {
        interactor?.didTapUnsupported(request: Greet.unsupportedAlert.Request(alert: alert))
    }
    @IBAction func AppleSignIn(_ sender: Any) {
        interactor?.didTapUnsupported(request: Greet.unsupportedAlert.Request(alert: alert))
    }
    @IBAction func userAgreement(_ sender: Any) {
        router?.openURL(request: Greet.openWebUrl.Request(urlString: userAgreementsUrlString))
    }
    @IBAction func privacyPolicy(_ sender: Any) {
        router?.openURL(request: Greet.openWebUrl.Request(urlString: privacyPolicyUrlString))
    }
    @IBAction func Skip(_ sender: Any) {
        interactor?.saveGuest(request: Greet.skipLogin.Request())
        router?.presentMain(request: Greet.skipLogin.Request())
    }
    @IBAction func login(_ sender: Any) {
        router?.presentLogin(request: Greet.logIn.Request())
    }
}

// MARK: - DisplayLogic

extension GreetViewController: GreetDisplayLogic {
    func presentAlert(viewModel: Greet.unsupportedAlert.ViewModel) {
        self.present(viewModel.alert, animated: true, completion: nil)
    }
}

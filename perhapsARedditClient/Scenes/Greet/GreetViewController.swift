//
//  GreetViewController.swift
//  perhapsARedditClient
//
//  Created by a on 03.09.22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol GreetDisplayLogic: AnyObject
{
    
}

class GreetViewController: UIViewController
{
    
    // MARK: - Clean Components
    
    @IBOutlet var logo: UIImageView!
    var router: GreetRoutingLogic = GreetRouter()
    
    // MARK: - Fields
    
    let alert = UIAlertController(title: "Warning", message: "Feature unsupported!", preferredStyle: .alert)
    
    // MARK: - Object lifecycle
    
//    init(router: GreetRoutingLogic) {
//        self.router = router
//        super.init(nibName: nil, bundle: nil)
//    }
    
//    required init?(coder: NSCoder) {
//        let gRouter = GreetRouter()
//        self.router = gRouter
//    }
    
    // MARK: - View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        self.router.viewController = self
        setupAlert()
    }
    
    // MARK: - functions
    
    private func setupAlert() {
        let okAction = UIAlertAction(title: "OK", style: UIAlertAction.Style.default) {
                UIAlertAction in
                NSLog("OK Pressed")
            }
        alert.addAction(okAction)
    }
    
    //MARK: - IBActions
    
    @IBAction func GoogleSignIn(_ sender: Any) {
        unsupported()
    }
    @IBAction func AppleSignIn(_ sender: Any) {
        unsupported()
    }
    @IBAction func userAgreement(_ sender: Any) {
        router.openURL(stringURL: "https://www.redditinc.com/policies/user-agreement")
    }
    @IBAction func privacyPolicy(_ sender: Any) {
        router.openURL(stringURL: "https://www.reddit.com/policies/privacy-policy")
    }
    @IBAction func Skip(_ sender: Any) {
        router.presentMain()
    }
    @IBAction func login(_ sender: Any) {
        router.presentLogin()
    }
}

// MARK: - CountriesDisplayLogic

extension GreetViewController: GreetDisplayLogic {
    private func unsupported() {
        self.present(alert, animated: true, completion: nil)
    }
}

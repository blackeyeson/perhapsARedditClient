//
//  LeftSideMenuInteractor.swift
//  perhapsARedditClient
//
//  Created by a on 03.09.22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol LeftSideMenuBusinessLogic {
    func didTapSubreddit(request: LeftSideMenu.setSub.Request)
    func didTapTimePeriod(request: LeftSideMenu.setperiod.Request)
    func selectRow() async
    func getSubs(request: LeftSideMenu.getSubs.Request) async
}

protocol LeftSideMenuDataStore {
}

final class LeftSideMenuInteractor: LeftSideMenuDataStore {
    
    private let worker: LeftSideMenuWorkerLogic
    private let presenter: LeftSideMenuPresentationLogic
    
    // MARK: - Object Lifecycle
    
    init(worker: LeftSideMenuWorkerLogic, presenter: LeftSideMenuPresentationLogic) {
        self.worker = worker
        self.presenter = presenter
    }
}

// MARK: - BusinessLogic

extension LeftSideMenuInteractor: LeftSideMenuBusinessLogic {
    
    func getSubs(request: LeftSideMenu.getSubs.Request) async {
        let sebredditsPage = await worker.getSubreddits(request: LeftSideMenu.getSubs.Request())
        var subs: [String] = []
        sebredditsPage.subreddits.forEach { subs += [$0.data.display_name] }
        
        DispatchQueue.main.async { [weak self, subs] in
            self?.presenter.presentSubs(viewModel: LeftSideMenu.getSubs.ViewModel(subNames: subs))
        }
    }
    
    func selectRow() async {
        let row = await worker.getPeriod()
        presenter.selectRow(response: row)
    }
    
    func didTapSubreddit(request: LeftSideMenu.setSub.Request) {
        worker.setSub(subreddit: request.subreddit)
    }
    
    func didTapTimePeriod(request: LeftSideMenu.setperiod.Request) {
        worker.setPeriod(timePeriod: request.timePeriod)
    }
}

//
//  RightSideMenuViewController.swift
//  perhapsARedditClient
//
//  Created by a on 03.09.22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol RightSideMenuDisplayLogic: AnyObject {
    func backToStart()
    func dismiss()
    func displayUsername(ViewModel: RightSideMenu.getUsername.ViewModel)
}

final class RightSideMenuViewController: UIViewController {
    // MARK: - Clean Components
    
    private var interactor: RightSideMenuBusinessLogic = RightSideMenuInteractor(presenter: RightSideMenuPresenter(), worker: RightSideMenuWorker(apiManager: APIManager()))
    private var router: RightSideMenuRoutingLogic & RightSideMenuDataPassing = RightSideMenuRouter()
    
    // MARK: - View

    @IBOutlet var userImage: UIImageView!
    @IBOutlet var greetLabel: UILabel!
    @IBOutlet var signInLogOut: UIButton!
    
    // MARK: - config
    
    func config() {
        let presenter = RightSideMenuPresenter()
        let api = APIManager()
        let worker = RightSideMenuWorker(apiManager: api)
        let interactor = RightSideMenuInteractor(presenter: presenter, worker: worker)
        let router = RightSideMenuRouter()
        self.interactor = interactor
        self.router = router
        router.viewController = self
        presenter.viewController = self
        router.viewController = self
    }
    
    // MARK: viewDidLoad
    
    override func viewDidLoad() {
        super.viewDidLoad()
//        interactor.getprofpic(request: profile.getpic.Request())
        Task { await interactor.getUsername(request: RightSideMenu.getUsername.Request()) }
    }
    
    //MARK: - Actions
    
    @IBAction func signInButton(_ sender: Any) {
        //
        backToStart()
    }
    @IBAction func tapOut(_ sender: Any) {
        dismiss()
    }
    @IBAction func swipeOut(_ sender: Any) {
        dismiss()
    }
    
}

// MARK: - DisplayLogic

extension RightSideMenuViewController: RightSideMenuDisplayLogic {
    
    func displayUsername(ViewModel: RightSideMenu.getUsername.ViewModel)  {
        let username = ViewModel.username
        var buttonText = "Sign in"
        if username != "Guest" { buttonText = "Change account" }
        signInLogOut.titleLabel?.text = buttonText
        greetLabel.text = "Hello \(username)!"
    }

    func dismiss() {
        router.dismissSelf()
    }
    
    func backToStart() {
        interactor.didTapLogOut(request: RightSideMenu.removeAcc.Request())
        router.backToStart()
    }
}
